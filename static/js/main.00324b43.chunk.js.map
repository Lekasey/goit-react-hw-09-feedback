{"version":3,"sources":["Components/Statistics/Statistics.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Section/Section.js","Components/Notification/Notification.js","App.js","index.js"],"names":["Statistics","className","this","props","good","neutral","bad","total","positivePercentage","Component","FeedbackOptions","options","onLeaveFeedback","map","option","type","name","onClick","Section","title","children","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","e","currentTarget","prevGood","prevNeutral","prevBad","persentage","Math","floor","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAmBeA,E,4JAfb,WACE,OACE,qBAAIC,UAAU,aAAd,UACE,qBAAIA,UAAU,mBAAd,mBAAwCC,KAAKC,MAAMC,QACnD,qBAAIH,UAAU,mBAAd,sBAA2CC,KAAKC,MAAME,WACtD,qBAAIJ,UAAU,mBAAd,kBAAuCC,KAAKC,MAAMG,OAClD,qBAAIL,UAAU,mBAAd,oBAAyCC,KAAKC,MAAMI,SACpD,qBAAIN,UAAU,mBAAd,kCACwBC,KAAKC,MAAMK,mBADnC,c,GARiBC,a,MCAV,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,8BACGD,EAAQE,KAAI,SAAAC,GACX,OACE,wBAEEC,KAAK,SACLC,KAAMF,EACNb,UAAU,SACVgB,QAASL,EALX,SAOGE,GANIA,Q,UCGFI,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASnB,UAAU,UAAnB,UACE,6BAAKkB,IACJC,MCDQC,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCGE,SAASC,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBpB,EADqB,KACfqB,EADe,OAEED,mBAAS,GAFX,mBAErBnB,EAFqB,KAEZqB,EAFY,OAGNF,mBAAS,GAHH,mBAGrBlB,EAHqB,KAGhBqB,EAHgB,KAsBtBC,EAAqB,WAEzB,OADcxB,EAAOC,EAAUC,GAWjC,OACE,gCACE,cAAC,EAAD,CACEa,MAAM,yBACNC,SACE,cAAC,EAAD,CAAiBT,QAPZ,CAAC,OAAQ,UAAW,OAOOC,gBAlCnB,SAAAiB,GAEnB,OADiBA,EAAEC,cAAXd,MAEN,IAAK,OACHS,GAAQ,SAAAM,GAAQ,OAAIA,EAAW,KAC/B,MACF,IAAK,UACHL,GAAW,SAAAM,GAAW,OAAIA,EAAc,KACxC,MACF,IAAK,MACHL,GAAO,SAAAM,GAAO,OAAIA,EAAU,KAC5B,MACF,QACE,aAyBF,cAAC,EAAD,CACEd,MAAM,aACNC,SACEQ,IAAuB,EACrB,cAAC,EAAD,CACExB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOqB,IACPpB,mBAzB4B,WACtC,IAAM0B,EAAc9B,EAAOwB,IAAwB,IACnD,OAAgC,IAAzBA,IAA6B,EAAIO,KAAKC,MAAMF,GAuBrBG,KAGtB,cAAC,EAAD,CAAcf,QAAQ,2B,MCvDlCgB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAACjB,EAAD,MAEJkB,SAASC,eAAe,W","file":"static/js/main.00324b43.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Statistics.css';\n\nclass Statistics extends Component {\n  render() {\n    return (\n      <ul className=\"statistics\">\n        <li className=\"statistics__item\">Good: {this.props.good}</li>\n        <li className=\"statistics__item\">Neutral: {this.props.neutral}</li>\n        <li className=\"statistics__item\">Bad: {this.props.bad}</li>\n        <li className=\"statistics__item\">Total: {this.props.total}</li>\n        <li className=\"statistics__item\">\n          Positive percentage: {this.props.positivePercentage}%\n        </li>\n      </ul>\n    );\n  }\n}\n\nexport default Statistics;\n","import React from 'react';\nimport './FeedbackOptions.css';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div>\n      {options.map(option => {\n        return (\n          <button\n            key={option}\n            type=\"button\"\n            name={option}\n            className=\"button\"\n            onClick={onLeaveFeedback}\n          >\n            {option}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n","import React from 'react';\nimport './Section.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className=\"section\">\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","import React from 'react';\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nexport default Notification;\n","import React, { useState } from 'react';\nimport Statistics from './Components/Statistics';\nimport FeedbackOptions from './Components/FeedbackOptions';\nimport Section from './Components/Section';\nimport Notification from './Components/Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const clickCounter = e => {\n    const { name } = e.currentTarget;\n    switch (name) {\n      case 'good':\n        setGood(prevGood => prevGood + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevNeutral => prevNeutral + 1);\n        break;\n      case 'bad':\n        setBad(prevBad => prevBad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const persentage = (good / countTotalFeedback()) * 100;\n    return countTotalFeedback() === 0 ? 0 : Math.floor(persentage);\n  };\n\n  const keys = ['good', 'neutral', 'bad'];\n\n  return (\n    <div>\n      <Section\n        title=\"Please, leave feedback\"\n        children={\n          <FeedbackOptions options={keys} onLeaveFeedback={clickCounter} />\n        }\n      />\n\n      <Section\n        title=\"Statistics\"\n        children={\n          countTotalFeedback() > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback()}\n              positivePercentage={countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )\n        }\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}